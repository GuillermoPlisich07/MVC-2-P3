@model MVC_2_P3.DTOs.DTOListadoArticuloRangoPorFecha

@{
    ViewData["Title"] = "ListadoArticuloRangoPorFecha";
}
     
<h1>Listado Articulos por rango de fecha</h1>
<div class="row">
    <div class="col-md-4">
        <form asp-action="ListadoArticuloRangoPorFecha">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label form="inicio">Fecha Inicio: </label>
                <input type="date" name="inicio">
            </div>
            <br />
            <div class="form-group">
                <label form="final">Fecha Final: </label>
                <input type="date" name="final">
            </div>
            <br />
            <div class="form-group">
                <label form="idArticulos" class="control-label">Articulos: </label>
                <select id="idArticulos" name="idArticulos" class="form-control" multiple>
                    @if (Model.articulos != null)
                    {
                        @foreach (var articulo in Model.articulos)
                        {
                            <option value="@articulo.id">@articulo.nombre</option>
                        }
                    }
                </select>
                <input type="hidden" name="pagina" value="@Model.pagina" />
                <span validation-for="idArticulos" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Buscar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


<br />

@if (Model.movimientos!=null)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.movimientos.FirstOrDefault().id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.movimientos.FirstOrDefault().fechaDeMovimiento)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.movimientos.FirstOrDefault().email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.movimientos.FirstOrDefault().cantidadMovidas)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.movimientos)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.fechaDeMovimiento)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.cantidadMovidas)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="d-flex justify-content-between">
        @if (Model.movimientos.Any())
        {
            <a class="btn btn-secondary" asp-controller="MovimientoStock" asp-action="ListadoArticuloTipoDescendente" asp-route-idArticulos="@string.Join(",", Model.idArticulos)" asp-route-inicio="@Model.inicio" asp-route-fin="@Model.final" asp-route-pagina="@(Model.pagina + 1)">Siguiente</a>
        }
    </div>

}
else
{
    <div class="alert alert-info">
        <p>No hay movimientos para mostrar</p>
        @if (Model.inicio != null && Model.final != null)
        {
            <p>
                <a class="btn btn-secondary" asp-controller="MovimientoStock" asp-action="ListadoArticuloRangoPorFecha" asp-route-idArticulos="@string.Join(",", Model.idArticulos)" asp-route-inicio="@Model.inicio" asp-route-fin="@Model.final" asp-route-pagina="1">Volver al primero</a>
            </p>
        }
    </div>
}